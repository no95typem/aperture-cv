@mixin imgGlitch($name, $intensity, $width, $height, $top, $left, $throttle) {
  $steps: $intensity;

  @for $i from 1 through 2 {
    @keyframes #{$name}-anim-#{$i} {
      @for $i from 0 through $steps {
        $progress: $i * (1 / $steps);
        #{percentage($progress)} {
          @if $progress > $throttle {
            clip: rect(
              random($height) + px,
              $width + px,
              random($height) + px,
              0
            );
          } @else {
            clip: rect(0, 0, 0, 0);
          }
        }
      }
    }
  }

  > img:nth-child(2),
  > img:nth-child(3) {
    position: absolute;
    top: $top + px;
    left: $left + px;
    clip: rect(0, 0, 0, 0);
  }
  > img:nth-child(2) {
    left: ($left + 2) + px;
    animation: #{$name}-anim-1 4s infinite linear alternate-reverse;
  }
  > img:nth-child(3) {
    left: ($left - 2) + px;
    animation: #{$name}-anim-2 5s infinite linear alternate-reverse;
  }
}

@mixin imgTerminalIntro($name, $intensity, $width, $height) {
  $steps: $intensity;

  @keyframes anim-#{$name}-intro {
    @for $i from 0 through $steps {
      $progress: $i * (1 / $steps);
      #{percentage($progress)} {
        clip-path: inset(0px $width * -($i / $steps - 1) + px 0px 0px);
      }
    }
  }

  animation: anim-#{$name}-intro 2s 1 linear;
}

ul {
  margin: 0px;
}

.content {
  &_with-aside-box {
    display: grid;
    column-gap: 30px;
    grid-template-columns: 1fr min-content;
  }
  &__line-box {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  &__line {
    display: grid;
    column-gap: 30px;
    grid-template-columns: 100px 1fr;
  }
}

.figure {
  max-height: 400px;
  max-width: 300px;
  grid-area: 1 / 3 / span 5 / span 1;
  margin: 0px;
  outline: none;
  width: max-content;
  height: max-content;

  position: relative;

  img {
    width: 90%;
    object-fit: contain;
    max-width: 300px;
  }

  &_active {
    @include imgTerminalIntro("figure", 10, 300, 400);
    @include imgGlitch("figure", 15, 300, 400, 5, 5, 0.5);
  }
}

.value {
  margin: 0px;
  align-self: center;
}

.header {
  color: var(--super-accent-text-color);
}
